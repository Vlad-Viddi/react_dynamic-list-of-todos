{"version":3,"sources":["components/TodoItem.tsx","components/LoadingButtons.tsx","components/SortButtons.tsx","helpers/api.ts","App.tsx","index.tsx"],"names":["TodoItem","todo","className","style","width","height","margin","completed","user","name","title","LoadingButtons","isLoading","errorMessage","todos","handleLoadClick","type","disabled","role","aria-hidden","onClick","hidden","length","SortButtons","sortById","sortByTitle","sortByUser","makeDefaultOrder","getInfo","url","a","fetch","response","json","getUsers","getTodos","App","useState","defaultTodos","setDefaultTodos","setTodos","setIsLoading","setErrorMessage","todosFromServer","usersFromServer","todosWithUsers","map","find","id","userId","sortedTodos","sort","b","localeCompare","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c9e3c2a.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../helpers/api';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => (\n  <div\n    className=\"card text-white bg-primary mb-3\"\n    style={\n      {\n        width: '400px',\n        height: '175px',\n        margin: '15px',\n      }\n    }\n  >\n    <div className=\"card-header\">\n      Status:\n      {\n        todo.completed\n          ? ' Finished'\n          : ' Active'\n      }\n    </div>\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{todo.user ? todo.user.name : 'unknown'}</h5>\n      <p className=\"card-text\">{todo.title}</p>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../helpers/api';\n\ntype Props = {\n  isLoading: boolean;\n  errorMessage: string;\n  todos: Todo[];\n  handleLoadClick: () => void;\n};\n\nconst LoadingButtons: React.FC<Props> = (\n  {\n    isLoading, errorMessage, todos, handleLoadClick,\n  },\n) => {\n  return (\n    isLoading\n      ? (\n        <button className=\"btn btn-primary\" type=\"button\" disabled>\n          <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" />\n          Loading...\n        </button>\n      )\n      : (\n        <>\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={handleLoadClick}\n            hidden={todos.length !== 0}\n          >\n            <span role=\"status\" aria-hidden=\"true\" />\n            Load\n          </button>\n          <p className=\"alert alert-primary mt5\" hidden={errorMessage === ''} role=\"alert\">{`¯\\\\_(ツ)_/¯ ${errorMessage}`}</p>\n        </>\n      )\n  );\n};\n\nexport default LoadingButtons;\n","import React from 'react';\nimport { Todo } from '../helpers/api';\n\ntype SortProps = {\n  todos: Todo[];\n  sortByTitle: () => void;\n  sortById: () => void;\n  sortByUser: () => void;\n  makeDefaultOrder: () => void;\n};\n\nconst SortButtons: React.FC<SortProps> = ({\n  todos, sortById, sortByTitle, sortByUser, makeDefaultOrder,\n}) => {\n  return (\n    <div className=\"sorting-btns\" hidden={todos.length === 0}>\n      <button\n        type=\"button\"\n        className=\"btn btn-success btn-sort\"\n        onClick={sortByTitle}\n      >\n        Sort by Title\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-sort\"\n        onClick={sortById}\n      >\n        Sort by ID\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-warning btn-sort\"\n        onClick={sortByUser}\n      >\n        Sort by User\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary btn-sort\"\n        onClick={makeDefaultOrder}\n      >\n        RESET\n      </button>\n    </div>\n  );\n};\n\nexport default SortButtons;\n","const BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/';\n\nexport interface User {\n  id: number;\n  name: string;\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\nexport const getInfo = async <T>(url: string): Promise<T> => {\n  const response = await fetch(BASE_URL + url);\n\n  return response.json();\n};\n\nexport const getUsers = async (): Promise <User[]> => {\n  return getInfo('/users.json');\n};\n\nexport const getTodos = async (): Promise <Todo[]> => {\n  return getInfo('/todos.json');\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { TodoItem } from './components/TodoItem';\nimport LoadingButtons from './components/LoadingButtons';\nimport SortButtons from './components/SortButtons';\nimport { getUsers, getTodos, Todo } from './helpers/api';\n\nconst App = () => {\n  const [defaultTodos, setDefaultTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleLoadClick = async () => {\n    setIsLoading(true);\n\n    try {\n      const todosFromServer = await getTodos();\n      const usersFromServer = await getUsers();\n\n      const todosWithUsers = todosFromServer.map(todo => ({\n        ...todo,\n        user: usersFromServer.find(user => user.id === todo.userId),\n      }));\n\n      setDefaultTodos(todosWithUsers);\n      setTodos(todosWithUsers);\n    } catch (error) {\n      setErrorMessage('Errors happens, try to reload');\n    }\n\n    setIsLoading(false);\n  };\n\n  const sortByTitle = () => {\n    const sortedTodos = [...defaultTodos].sort((a, b) => a.title.localeCompare(b.title));\n\n    setTodos(sortedTodos);\n  };\n\n  const sortById = () => {\n    const sortedTodos = [...defaultTodos].sort((a, b) => a.id - b.id);\n\n    setTodos(sortedTodos);\n  };\n\n  const sortByUser = () => {\n    const sortedTodos = [...defaultTodos].sort((a, b) => {\n      return a.user && b.user\n        ? a.user?.name.localeCompare(b.user.name)\n        : 0;\n    });\n\n    setTodos(sortedTodos);\n  };\n\n  const makeDefaultOrder = () => {\n    setTodos(defaultTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Dynamic list of TODOs</h1>\n\n      <LoadingButtons\n        todos={todos}\n        isLoading={isLoading}\n        handleLoadClick={handleLoadClick}\n        errorMessage={errorMessage}\n      />\n\n      <SortButtons\n        todos={todos}\n        sortByTitle={sortByTitle}\n        sortById={sortById}\n        sortByUser={sortByUser}\n        makeDefaultOrder={makeDefaultOrder}\n      />\n\n      {/* <div className=\"sorting-btns\" hidden={todos.length === 0}>\n        <button\n          type=\"button\"\n          className=\"btn btn-success btn-sort\"\n          onClick={sortByTitle}\n        >\n          Sort by Title\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger btn-sort\"\n          onClick={sortById}\n        >\n          Sort by ID\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-warning btn-sort\"\n          onClick={sortByUser}\n        >\n          Sort by User\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary btn-sort\"\n          onClick={makeDefaultOrder}\n        >\n          RESET\n        </button>\n      </div> */}\n\n      <ul className=\"cards__list\">\n        {todos.map(todo => (\n          <li key={todo.title}>\n            <TodoItem todo={todo} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}